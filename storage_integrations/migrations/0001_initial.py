# Generated by Django 5.2.4 on 2025-07-27 12:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CloudStorageProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('aws_s3', 'Amazon S3'), ('google_cloud', 'Google Cloud Storage'), ('dropbox', 'Dropbox'), ('azure_blob', 'Azure Blob Storage'), ('one_drive', 'Microsoft OneDrive')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('supports_import', models.BooleanField(default=True)),
                ('supports_export', models.BooleanField(default=True)),
                ('required_fields', models.JSONField(default=list)),
                ('optional_fields', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cloud_storage_providers',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='StorageQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_import_limit_mb', models.IntegerField(default=5000)),
                ('monthly_import_used_mb', models.IntegerField(default=0)),
                ('monthly_export_limit_mb', models.IntegerField(default=5000)),
                ('monthly_export_used_mb', models.IntegerField(default=0)),
                ('last_reset_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_quota', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'storage_quotas',
            },
        ),
        migrations.CreateModel(
            name='UserCloudStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('credentials', models.JSONField()),
                ('default_bucket', models.CharField(blank=True, max_length=255)),
                ('default_folder', models.CharField(blank=True, max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('last_tested', models.DateTimeField(blank=True, null=True)),
                ('connection_status', models.CharField(choices=[('unknown', 'Unknown'), ('connected', 'Connected'), ('error', 'Error')], default='unknown', max_length=20)),
                ('connection_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage_integrations.cloudstorageprovider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cloud_storages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_cloud_storages',
                'ordering': ['-is_default', 'name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CloudStorageImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_path', models.CharField(max_length=1000)),
                ('source_file_name', models.CharField(max_length=255)),
                ('source_file_size', models.BigIntegerField(blank=True, null=True)),
                ('local_file', models.FileField(blank=True, null=True, upload_to='imported_files/%Y/%m/%d/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('downloading', 'Downloading'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('bytes_downloaded', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_imports', to=settings.AUTH_USER_MODEL)),
                ('cloud_storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage_integrations.usercloudstorage')),
            ],
            options={
                'db_table': 'cloud_storage_imports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CloudStorageExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_file', models.FileField(upload_to='temp_exports/')),
                ('destination_path', models.CharField(max_length=1000)),
                ('destination_file_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('uploading', 'Uploading'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('bytes_uploaded', models.BigIntegerField(default=0)),
                ('cloud_file_url', models.URLField(blank=True)),
                ('cloud_file_id', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_exports', to=settings.AUTH_USER_MODEL)),
                ('cloud_storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage_integrations.usercloudstorage')),
            ],
            options={
                'db_table': 'cloud_storage_exports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StorageIntegrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('connect', 'Connect'), ('disconnect', 'Disconnect'), ('import', 'Import'), ('export', 'Export'), ('test_connection', 'Test Connection')], max_length=20)),
                ('details', models.JSONField(default=dict)),
                ('success', models.BooleanField()),
                ('error_message', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_logs', to=settings.AUTH_USER_MODEL)),
                ('cloud_storage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storage_integrations.usercloudstorage')),
            ],
            options={
                'db_table': 'storage_integration_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='storage_int_user_id_a61d84_idx'), models.Index(fields=['cloud_storage', 'timestamp'], name='storage_int_cloud_s_42dd43_idx')],
            },
        ),
    ]
